name: Datapack CI (1.21.9, no-RCON)

on:
  pull_request:
  push:
    branches: [ main, work/**, feature/** ]

jobs:
  test-datapack:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Package all datapacks in the repo
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p world/datapacks
          # Find every folder that looks like a datapack root (has pack.mcmeta and data/)
          while IFS= read -r -d '' packdir; do
            base="$(basename "$packdir")"
            echo "Zipping datapack: $packdir -> world/datapacks/${base}.zip"
            (cd "$packdir" && zip -r "../../world/datapacks/${base}.zip" .)
          done < <(find . -type f -name pack.mcmeta -printf '%h\0' | xargs -0 -I{} bash -lc '[ -d "{}/data" ] && echo -n "{}\0"')
          echo "Packaged datapacks:"
          ls -lah world/datapacks

      - name: Start Minecraft Java 1.21.9 server (Docker)
        shell: bash
        run: |
          set -euo pipefail
          # Start server WITHOUT RCON; datapacks in world/datapacks will auto-load
          docker run -d --name mc \
            -e EULA=TRUE \
            -e VERSION=1.21.9 \
            -p 25565:25565 \
            -v "${{ github.workspace }}:/data" \
            itzg/minecraft-server:java21

          echo "Waiting for server to be ready..."
          # Poll up to ~5 minutes for "Done" line (server ready)
          for i in {1..60}; do
            if docker logs mc 2>&1 | grep -q "Done ("; then
              echo "Server is ready."
              break
            fi
            sleep 5
          done

          echo "---- recent server logs ----"
          docker logs mc --since 3m || true

      - name: Check server logs for datapack errors
        shell: bash
        run: |
          set -euo pipefail
          docker logs mc > server.log || true
          echo "---- tail of server.log ----"
          tail -n 400 server.log || true

          # Fail on common datapack/function errors
          if grep -E "(Failed to load datapacks|Error while executing function|Unknown function|Unknown scoreboard objective|Function not found|Parsing error)" server.log; then
            echo "Datapack errors detected in server log."
            exit 1
          fi

      - name: Stop server
        if: always()
        shell: bash
        run: |
          # Graceful stop (no RCON); container will exit when server stops
          docker exec mc stop || true
          # If the above doesn't work without RCON, force remove the container:
          docker rm -f mc || true
